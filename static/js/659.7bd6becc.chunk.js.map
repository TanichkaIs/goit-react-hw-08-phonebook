{"version":3,"file":"static/js/659.7bd6becc.chunk.js","mappings":"4VAsBA,SAASA,EAAUC,GACjB,OACE,UAAC,KAAD,gBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFH,GAJN,cAMG,mBACD,SAAC,IAAD,CAAME,MAAM,UAAUE,KAAK,gCAA3B,8CAEQ,KACP,IAAIC,MAAOC,iBAGjB,CA4ID,UA1ImB,WACjB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,KAERC,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,OAApBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAEd,OAAQhB,GACN,IAAK,OACHC,EAAQe,GACR,MAEF,IAAK,QACHb,EAASa,GACT,MAEF,IAAK,WACHX,EAAYW,GACZ,MACF,QACE,OAEL,EAEKC,GAAWC,EAAAA,EAAAA,MAOjB,OAAIZ,EAASa,YACJ,SAAC,KAAD,CAAUC,GAAG,eAIpB,SAAC,IAAD,CAAeT,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWU,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYR,UAAU,KAAK5B,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACE4B,UAAU,OACVS,YAAU,EACVC,SA9BW,SAAAjB,GACnBA,EAAIkB,iBACJf,GAASgB,EAAAA,EAAAA,IAAO,CAAEjC,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAChC,EA4BSmB,GAAI,CAAEW,GAAI,GAJZ,WAME,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WAYE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,WACN1C,KAAK,OACL2C,aAAa,OACbC,SAAU/B,EACVG,MAAOhB,OAGX,SAAC,KAAD,CAAMqC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACN1C,KAAK,QACL2C,aAAa,QACbC,SAAU/B,EACVG,MAAOd,OAGX,SAAC,KAAD,CAAMmC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,UAAQ,EACRC,WAAS,EACTxC,KAAK,WACL0C,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,eACbC,SAAU/B,EACVG,MAAOZ,UAIb,SAAC,IAAD,CACEyC,KAAK,SACLL,WAAS,EACT/C,QAAQ,YACR8B,GAAI,CAAEW,GAAI,EAAGY,GAAI,GAJnB,sBAQA,SAAC,KAAD,CAAMX,WAAS,EAACY,eAAe,WAA/B,UACE,SAAC,KAAD,CAAMV,MAAI,EAAV,UACE,SAAC,IAAD,CAAMW,QAAS,kBAAMvC,EAAS,SAAf,EAA0Bb,KAAK,GAAGH,QAAQ,QAAzD,yDAOR,SAACF,EAAD,CAAWgC,GAAI,CAAEW,GAAI,SAI5B,C","sources":["pages/SignupPage/SignupPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signup } from 'redux/auth/authOperations';\nimport { Navigate } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from 'redux/selectors';\nimport { useNavigate } from 'react-router-dom';\n\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://github.com/TanichkaIs\">\n        Tetiana's React example projects\n      </Link>{' '}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nconst SignupForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const authData = useSelector(selectAuth);\n  const navigate = useNavigate();\n\n  const theme = createTheme();\n\n  const controlInput = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(signup({ name, email, password }));\n  };\n\n  if (authData.isLoggedIn) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              {/* <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid> */}\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Nickname\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  onChange={controlInput}\n                  value={name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={controlInput}\n                  value={email}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={controlInput}\n                  value={password}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link onClick={() => navigate('/login')} href=\"\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default SignupForm;"],"names":["Copyright","props","variant","color","align","href","Date","getFullYear","useState","name","setName","email","setEmail","password","setPassword","authData","useSelector","selectAuth","navigate","useNavigate","theme","createTheme","controlInput","evt","target","value","dispatch","useDispatch","isLoggedIn","to","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","noValidate","onSubmit","preventDefault","signup","mt","container","spacing","item","xs","required","fullWidth","id","label","autoComplete","onChange","type","mb","justifyContent","onClick"],"sourceRoot":""}